using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace SalonDeBelleza
{
    public partial class Clientes : Form
    {
        Clases.Conexion conexion = new Clases.Conexion();
        public Clientes()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource1.Fill();
        }

        private void btnGuardar_Click(object sender, EventArgs e)
        {
            if (Validar())
            {
                try
                {
                    if (conexion.abrirConexion() == true)
                    {
                        Clases.Clientes pCliente = new Clases.Clientes();
                        pCliente.identidad = Convert.ToInt32(txtIdentidad.Text);
                        pCliente.Nombre = txtNombre.Text;
                        pCliente.Apellido = txtApellido.Text;
                        pCliente.Sexo = txtSexo.Text;
                        pCliente.Telefono = Convert.ToInt32(txtTelefono.Text);
                        pCliente.Direccion = txtDireccion.Text;
                        pCliente.Observaciones = txtObservaciones.Text;

                        int resultado;
                        resultado = Clases.Clientes.agregarCliente(conexion.conexion, pCliente);
                        if (resultado > 0)
                        {
                            txtIdentidad.Clear();
                            txtNombre.Clear();
                            txtApellido.Clear();
                            txtTelefono.Clear();
                            txtDireccion.Clear();
                            txtObservaciones.Clear();
                            txtSexo.Clear();
                            sqlDataSource1.Fill();
                        }
                        conexion.cerrarConexion();
                    }
                    else
                    {
                        MessageBox.Show("No se Conecto!");
                    }
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message);
                }
            }
        }

        private void btnActualizar_Click(object sender, EventArgs e)
        {
            if (Validar())
            {
                try
                {
                    if (conexion.abrirConexion() == true)
                    {
                        Clases.Clientes pCliente = new Clases.Clientes();
                        pCliente.identidad = Convert.ToInt32(txtIdentidad.Text);
                        pCliente.Nombre = txtNombre.Text;
                        pCliente.Apellido = txtApellido.Text;
                        pCliente.Sexo = txtSexo.Text;
                        pCliente.Telefono = Convert.ToInt32(txtTelefono.Text);
                        pCliente.Direccion = txtDireccion.Text;
                        pCliente.Observaciones = txtObservaciones.Text;

                        int resultado;
                        resultado = Clases.Clientes.ActualizarCliente(conexion.conexion, pCliente);
                        if (resultado > 0)
                        {
                            txtIdentidad.Clear();
                            txtNombre.Clear();
                            txtApellido.Clear();
                            txtTelefono.Clear();
                            txtDireccion.Clear();
                            txtObservaciones.Clear();
                            txtSexo.Clear();
                            sqlDataSource1.Fill();
                        }
                        conexion.cerrarConexion();
                    }
                    else
                    {
                        MessageBox.Show("No se Conecto!");
                    }
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message);
                }
            }
        }

        private void btnEliminar_Click(object sender, EventArgs e)
        {
            if (txtIdentidad.Text != "")
            {
                try
                {
                    if (conexion.abrirConexion() == true)
                    {
                        Clases.Clientes pCliente = new Clases.Clientes();
                        pCliente.identidad = Convert.ToInt32(txtIdentidad.Text);

                        int resultado;
                        resultado = Clases.Clientes.EliminarCliente(conexion.conexion, pCliente);
                        if (resultado > 0)
                        {
                            txtIdentidad.Clear();
                            txtNombre.Clear();
                            txtApellido.Clear();
                            txtTelefono.Clear();
                            txtDireccion.Clear();
                            txtObservaciones.Clear();
                            txtSexo.Clear();
                            sqlDataSource1.Fill();
                        }
                        conexion.cerrarConexion();
                    }
                    else
                    {
                        MessageBox.Show("No se Conecto!");
                    }
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message);
                }
            }
            else
            {
                MessageBox.Show("Ingrese la Identidad del cliente que desea eliminar");
                txtIdentidad.Focus();
            }
        }

        private void btnCerrar_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void Clientes_Load(object sender, EventArgs e)
        {

        }

        private Boolean Validar()
        {
            if (txtIdentidad.Text == "")
            {
                errorProvider1.Clear();
                errorProvider1.SetError(txtIdentidad, "Este Campo es Obligatorio");
                return false;
            }
            else if (txtNombre.Text == "")
            {
                errorProvider1.Clear();
                errorProvider1.SetError(txtNombre, "Este Campo es Obligatorio");
                return false;
            }
            else if (txtApellido.Text == "")
            {
                errorProvider1.Clear();
                errorProvider1.SetError(txtApellido, "Este Campo es Obligatorio");
                return false;
            }
            else if (txtSexo.Text == "")
            {
                errorProvider1.Clear();
                errorProvider1.SetError(txtSexo, "Este Campo es Obligatorio");
                return false;
            }
            else
            {
                errorProvider1.Clear();
                return true;
            }
        }

        private void txtIdentidad_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (Char.IsDigit(e.KeyChar))
            {
                e.Handled = false;
            }
            else if (Char.IsControl(e.KeyChar))
            {
                e.Handled = false;
            }
            else
            {
                e.Handled = true;
            }
        }

        private void txtTelefono_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (Char.IsDigit(e.KeyChar))
            {
                e.Handled = false;
            }
            else if (Char.IsControl(e.KeyChar))
            {
                e.Handled = false;
            }
            else
            {
                e.Handled = true;
            }
        }

        private void txtNombre_KeyPress(object sender, KeyPressEventArgs e)
        {
            if(Char.IsDigit(e.KeyChar))
            {
                e.Handled = true;
            }
            else if(Char.IsControl(e.KeyChar))
            {
                e.Handled = false;
            }
            else
            {
                e.Handled = false;
            }
        }

        private void txtApellido_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (Char.IsDigit(e.KeyChar))
            {
                e.Handled = true;
            }
            else if (Char.IsControl(e.KeyChar))
            {
                e.Handled = false;
            }
            else
            {
                e.Handled = false;
            }
        }

        private void txtSexo_TextChanged(object sender, EventArgs e)
        {

        }

        private void txtSexo_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (Char.IsDigit(e.KeyChar))
            {
                e.Handled = true;
            }
            else if (Char.IsControl(e.KeyChar))
            {
                e.Handled = false;
            }
            else
            {
                e.Handled = false;
            }
        }
    }
}
