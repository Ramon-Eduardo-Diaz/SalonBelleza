using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace SalonDeBelleza
{
    public partial class Facturacion : Form
    {
        Clases.Conexion conexion = new Clases.Conexion();
        public Facturacion()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource1.Fill();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource1.Fill();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource2.Fill();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource2.Fill();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource3.Fill();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource3.Fill();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource4.Fill();
        }

        private void label1_Click(object sender, EventArgs e)
        {

        }

        private void btnCerrar_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void btnGuardar_Click(object sender, EventArgs e)
        {
            if (Validar())
            {
                try
                {
                    if (conexion.abrirConexion() == true)
                    {
                        Clases.Factura pFactura = new Clases.Factura();
                        pFactura.FechaFactura = txtFecha.Text;
                        pFactura.IdCliente = Convert.ToInt32(lookCliente.Text);
                        pFactura.IdServicio = Convert.ToInt32(lookServicio.Text);
                        pFactura.IdEmpleado = Convert.ToInt32(lookEmpleado.Text);
                        pFactura.TipoPago = cmbTipoPago.Text;
                        pFactura.subtotal = Convert.ToDecimal(txtSubTotal.Text);
                        pFactura.impuesto = Convert.ToDecimal(txtImpuesto.Text);
                        pFactura.total = Convert.ToDecimal(txtTotal.Text);

                        Clases.Historial pHistorial = new Clases.Historial();
                        pHistorial.Fecha = txtFecha.Text;
                        pHistorial.IdCliente = Convert.ToInt32(lookCliente.Text);
                        pHistorial.IdEmpleado = Convert.ToInt32(lookEmpleado.Text);

                        int resultado, resulatdo2;
                        resulatdo2 = Clases.Historial.AgregarHistorial(conexion.conexion, pHistorial);
                        resultado = Clases.Factura.AgregarFactura(conexion.conexion, pFactura);
                        if (resultado > 0 && resulatdo2 > 0)
                        {
                            txtSubTotal.Clear();
                            txtImpuesto.Clear();
                            txtTotal.Clear();
                            sqlDataSource4.Fill();
                        }
                        conexion.cerrarConexion();
                    }
                    else
                    {
                        MessageBox.Show("No se Conecto!");
                    }
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message);
                }
            }
        }
        private Boolean Validar()
        {
            if (txtSubTotal.Text == "")
            {
                errorProvider1.Clear();
                errorProvider1.SetError(txtSubTotal, "Este Campo es Obligatorio");
                return false;
            }
            else if (lookCliente.Text == "")
            {
                errorProvider1.Clear();
                errorProvider1.SetError(lookCliente, "Este Campo es Obligatorio");
                return false;
            }
            else if (lookEmpleado.Text == "")
            {
                errorProvider1.Clear();
                errorProvider1.SetError(lookEmpleado, "Este Campo es Obligatorio");
                return false;
            }
            else if (lookServicio.Text == "")
            {
                errorProvider1.Clear();
                errorProvider1.SetError(lookServicio, "Este Campo es Obligatorio");
                return false;
            }
            else
            {
                errorProvider1.Clear();
                return true;
            }
        }
        private void Facturacion_Load(object sender, EventArgs e)
        {
            try

            {
                DateTime Hoy = DateTime.Today;
                string fecha_actual = Hoy.ToString("dd-MM-yyyy");

                txtFecha.Text = fecha_actual;
            }
            catch (Exception ex) { MessageBox.Show(ex.ToString()); }
        }

        private void txtSubTotal_Leave(object sender, EventArgs e)
        {
            if (txtSubTotal.Text != "")
            {
                decimal SubTotal = Convert.ToDecimal(txtSubTotal.Text);
                decimal imp = Convert.ToDecimal(0.15);

                decimal impuesto = (SubTotal * imp);
                txtImpuesto.Text = impuesto.ToString();
                txtTotal.Text = (SubTotal + impuesto).ToString();
            }
        }

        private void txtSubTotal_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (Char.IsDigit(e.KeyChar))
            {
                e.Handled = false;
            }
            else if (Char.IsControl(e.KeyChar))
            {
                e.Handled = false;
            }
            else
            {
                e.Handled = true;
            }
        }
    }
}
